{"version":3,"sources":["images/Christmas.jpg","Components/GreetingCard.js","Components/customizeMessage.js","App.js","reportWebVitals.js","index.js"],"names":["GreetingCard","greeting","body","closing","setCustomize","preview","setPreview","email","className","src","Christmas","alt","onClick","mailto","url","encodeURIComponent","console","log","window","open","CustomizeMessage","setEmail","setGreeting","setBody","setClosing","htmlFor","name","type","value","onChange","event","target","placeholder","rows","preventDefault","App","useState","customize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e32ea04e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Christmas.b7a14860.jpg\";","import Christmas from \"../images/Christmas.jpg\";\nimport \"../App.css\";\n\nfunction GreetingCard({\n  greeting,\n  body,\n  closing,\n  setCustomize,\n  preview,\n  setPreview,\n  email,\n}) {\n  const continueEditing = () => {\n    setCustomize(true);\n    setPreview(false);\n  };\n  const sendEcard = () => {\n    {\n      let mailto = `mailto:${email}`;\n      mailto += \"?subject=E-Card\";\n      mailto += \"&body=You have received an e-greeting card.\";\n      mailto += \"%0D%0A%0D%0A\";\n      mailto += \"Go To Greeting Card\";\n      mailto += \"%0D%0A\";\n\n      let url = \"https://eyobel7k.github.io/ecard\";\n      url += `?greeting=${encodeURIComponent(greeting)}`;\n      url += `&body=${encodeURIComponent(body)}`;\n      url += `&closing=${encodeURIComponent(closing)}`;\n\n      mailto += encodeURIComponent(url);\n\n      console.log(mailto);\n\n      window.open(mailto);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={Christmas} className=\"App-logo\" alt=\"Christmas images\" />\n        <p>{greeting}</p>\n        <p>{body}</p>\n        <p>{closing}</p>\n        {preview ? (\n          <div>\n            <button onClick={continueEditing}>ContinueEditing</button>\n            <button onClick={sendEcard}>Send</button>\n          </div>\n        ) : (\n          <button className=\"App-link\" onClick={() => setCustomize(true)}>\n            Reshare This Card\n          </button>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default GreetingCard;\n","import Christmas from \"../images/Christmas.jpg\";\n\nexport default function CustomizeMessage({\n  email,\n  setEmail,\n  greeting,\n  setGreeting,\n  body,\n  setBody,\n  closing,\n  setClosing,\n  setPreview,\n  setCustomize,\n}) {\n  const onSubmit = (event) => {\n    event.preventDefault();\n    console.log(email, greeting, body, closing);\n    setPreview(true);\n    setCustomize(false);\n  };\n\n  return (\n    <>\n      <div className=\"instructions\">\n        <img src={Christmas}  alt=\"Christmas image \"  className=\"thumb\"/>\n\n        <p>\n          <strong>How to Reshare:</strong>\n          <br />\n          Write your own custom message below\n        </p>\n      </div>\n\n      <form>\n        \n       \n        <div>\n        <label htmlFor=\"Email\">Recipient Email </label><br />\n          <input\n            name=\"email\"\n            type=\"text\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n            placeholder=\"Recipient Email\"\n          />\n        </div>\n   \n        <div>\n        <label htmlFor=\"Greeting\">Greeting </label><br />\n          <input\n            name=\"greeting\"\n            type=\"text\"\n            value={greeting}\n            placeholder=\"Greeting\"\n            onChange={(event) => setGreeting(event.target.value)}\n          />\n        </div>\n       \n        <div>\n        <label htmlFor=\"body\">Body </label><br />\n          <textarea\n            name=\"Body\"\n            type=\"textarea\"\n            value={body}\n            onChange={(event) => setBody(event.target.value)}\n            placeholder=\"Body\"\n            rows=\"3\"\n          ></textarea>\n        </div>\n       \n        <div>\n        <label htmlFor=\"closing\">Closing </label><br />\n          <input\n            name=\"closing\"\n            type=\"text\"\n            value={closing}\n            placeholder=\"Recipient Email\"\n            onChange={(event) => setClosing(event.target.value)}\n          />\n\n        </div>\n        <button\n          type=\"submit\"\n          onClick={\n            onSubmit\n          }\n        >\n          Preview Greeting Card\n        </button>\n      </form>\n    </>\n  );\n}\n","import \"./App.css\";\nimport GreetingCard from \"./Components/GreetingCard\";\nimport CustomizeMessage from \"./Components/customizeMessage\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const[email, setEmail]=useState('');\n  const [greeting, setGreeting] = useState(\"Dear Mom,\");\n  const [body, setBody] = useState(\"Have a comforting and Joyous holiday\");\n  const [closing, setClosing] = useState(\"Love your son, Eyob\");\n  const [customize, setCustomize]=useState(false)\n  const [preview, setPreview]=useState(false)\n\n\n  return(\n    <>\n    {customize\n     \n      ? <CustomizeMessage \n      email={email}\n      setEmail={setEmail}\n      greeting={greeting}\n      setGreeting={setGreeting}\n      body={body}\n      setBody={setBody}\n      closing={closing}\n      setClosing={setClosing}\n      setPreview={setPreview}\n      setCustomize={setCustomize}\n      \n      \n      />\n      : <GreetingCard \n      email={email}\n      greeting={greeting} \n      body={body} \n      closing={closing} \n      setCustomize={setCustomize}\n      preview={preview}\n      setPreview={setPreview}\n\n      />\n    \n    }\n  </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}